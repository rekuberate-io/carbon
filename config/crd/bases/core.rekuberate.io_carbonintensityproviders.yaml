---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: carbonintensityproviders.core.rekuberate.io
spec:
  group: core.rekuberate.io
  names:
    kind: CarbonIntensityProvider
    listKind: CarbonIntensityProviderList
    plural: carbonintensityproviders
    singular: carbonintensityprovider
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.provider
      name: Provider
      type: string
    - jsonPath: .status.zone
      name: Zone
      type: string
    - jsonPath: .spec.forecastRefreshIntervalHours
      name: Forecast INVL(h)
      type: string
    - jsonPath: .status.lastForecast
      name: Last Forecast
      type: string
    - jsonPath: .status.carbonIntensity
      name: CI (gCO2eq/KWh)
      type: string
    - jsonPath: .status.lastUpdate
      name: Last Update
      type: string
    - jsonPath: .status.nextUpdate
      name: Next Update
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CarbonIntensityProvider is the Schema for the carbonintensityproviders
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CarbonIntensityProviderSpec defines the desired state of
              CarbonIntensityProvider
            properties:
              electricitymaps:
                properties:
                  apiKey:
                    description: SecretReference represents a Secret Reference. It
                      has enough information to retrieve secret in any namespace
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  commercialTrialEndpoint:
                    type: string
                  subscription:
                    default: free_tier
                    enum:
                    - commercial
                    - commercial_trial
                    - free_tier
                    type: string
                  zone:
                    type: string
                required:
                - apiKey
                - subscription
                - zone
                type: object
              emissionsType:
                default: average
                enum:
                - average
                - marginal
                type: string
              forecastRefreshIntervalHours:
                default: 12
                format: int32
                maximum: 24
                minimum: 12
                type: integer
              liveRefreshIntervalHours:
                default: 1
                format: int32
                maximum: 24
                minimum: 1
                type: integer
              provider:
                default: electricitymaps
                enum:
                - watttime
                - electricitymaps
                - simulator
                type: string
              simulator:
                properties:
                  randomize:
                    default: false
                    type: boolean
                  zone:
                    default: SIM-1
                    type: string
                required:
                - zone
                type: object
              watttime:
                properties:
                  password:
                    description: SecretReference represents a Secret Reference. It
                      has enough information to retrieve secret in any namespace
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  region:
                    type: string
                  username:
                    type: string
                required:
                - password
                - region
                - username
                type: object
            required:
            - emissionsType
            - forecastRefreshIntervalHours
            - liveRefreshIntervalHours
            - provider
            type: object
          status:
            description: CarbonIntensityProviderStatus defines the observed state
              of CarbonIntensityProvider
            properties:
              carbonIntensity:
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastForecast:
                format: date-time
                type: string
              lastUpdate:
                format: date-time
                type: string
              nextUpdate:
                format: date-time
                type: string
              provider:
                type: string
              zone:
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
